###############################################################################
#
# Configuration file for the SLS-FIF DatabaseClient application
#
# @author Olivier Goethals
#
###############################################################################

####################
# GENERAL SETTINGS #
####################

# Indicates whether the sent messages should be written to an output file
# (true/false)
databaseclient.WriteSentMessages=true

# Indicates the location of the configuration file for the message connector framework.
# The location of the file is relative to the work directory. 
databaseclient.BeanConfigurationFile=BKS/etc/mcf-bksservice.xml

##################
# SQL STATEMENTS #
##################

# The SQL statement for retrieving the requests from the database
databaseclient.effonl.PruefeBestandskunde.RetrieveAccessNumber=\
SELECT /*+FIRST_ROWS*/ AN.CUSTOMER_NUMBER \
FROM ACCESS_NUMBER  AN, CONFIG_SERVICE_CHARACTERISTIC CSC  \
WHERE TYPE_RD IN ('MAIN_ACCESS_NUM', 'ACC_NUM_RANGE','MOBIL_ACCESS_NUM') AND \
((AN.START_RANGE_STRING > ? AND AN.START_RANGE_STRING <= ? \
AND CONCAT( AN.END_RANGE_STRING,SUBSTR(AN.ACCESS_NUMBER,INSTR(AN.ACCESS_NUMBER,';',-1,1)+1))> ? ) \
OR AN.START_RANGE_STRING LIKE ?||'%' ) \
AND AN.CONFIG_SERVICE_CHAR_ID = CSC.CONFIG_SERVICE_CHAR_ID \
AND CSC.EFFECTIVE_STATUS = 'ACTIVE' \
AND CSC.EFFECTIVE_FLAG = 'N'

databaseclient.effonl.PruefeBestandskunde.RetrieveAddressNameCustomer=\
SELECT  DISTINCT CUSTOMER_NUMBER, ENTITY_TYPE  \
FROM ADDRESS A, ENTITY E   \
WHERE A.EFFECTIVE_FLAG = 'N'  \
AND A.EFFECTIVE_STATUS = 'ACTIVE'  \
AND A.ENTITY_ID = E.ENTITY_ID  \
AND E.CUSTOMER_NUMBER IS NOT NULL \
AND E.TERMINATION_DATE = TO_DATE('01.01.1901 01:00:01', 'DD.MM.YYYY HH24:MI:SS') \
AND A.ADDRESS_TYPE_RD IN ('KUND','STD','LOKA')  \
AND A.POSTAL_CODE = ?  \
AND UPPER(A.STREET_NAME) = ?  \
AND A.STREET_NUMBER = ?  \
AND A.STREET_NUMBER_SUFFIX ?  \
AND E.ORGANIZATION_TYPE_RD = ? \
AND E.NLSUPPER_NAME LIKE UPPER(?)

databaseclient.effonl.PruefeBestandskunde.RetrieveAddressCustomer=\
SELECT  DISTINCT CUSTOMER_NUMBER, ENTITY_TYPE  \
FROM ADDRESS A, ENTITY E   \
WHERE A.EFFECTIVE_FLAG = 'N'  \
AND A.EFFECTIVE_STATUS = 'ACTIVE'  \
AND A.ENTITY_ID = E.ENTITY_ID  \
AND E.CUSTOMER_NUMBER IS NOT NULL \
AND E.TERMINATION_DATE = TO_DATE('01.01.1901 01:00:01', 'DD.MM.YYYY HH24:MI:SS') \
AND A.ADDRESS_TYPE_RD IN ('KUND','STD','LOKA')  \
AND A.POSTAL_CODE = ?  \
AND UPPER(A.STREET_NAME) = ?  \
AND A.STREET_NUMBER = ?  \
AND A.STREET_NUMBER_SUFFIX ?  \
AND E.CUSTOMER_NUMBER IN (?)

databaseclient.effonl.PruefeBestandskunde.RetrieveNameCustomer=\
SELECT  DISTINCT CUSTOMER_NUMBER , ENTITY_TYPE  \
FROM ENTITY E   \
WHERE E.NLSUPPER_NAME LIKE UPPER(?) \
AND E.TERMINATION_DATE = TO_DATE('01.01.1901 01:00:01', 'DD.MM.YYYY HH24:MI:SS') \
AND E.ORGANIZATION_TYPE_RD = ? \
AND E.CUSTOMER_NUMBER IN (?)

# The SQL statement for retrieving the requests from the database
databaseclient.onl.PruefeBestandskunde.RetrieveAccessNumber=\
SELECT /*+FIRST_ROWS*/ AN.CUSTOMER_NUMBER \
FROM ACCESS_NUMBER  AN, CONFIG_SERVICE_CHARACTERISTIC CSC  \
WHERE TYPE_RD IN ('MAIN_ACCESS_NUM', 'ACC_NUM_RANGE','MOBIL_ACCESS_NUM') AND \
((AN.START_RANGE_STRING > ? AND AN.START_RANGE_STRING <= ? \
AND CONCAT( AN.END_RANGE_STRING,SUBSTR(AN.ACCESS_NUMBER,INSTR(AN.ACCESS_NUMBER,';',-1,1)+1))> ? ) \
OR AN.START_RANGE_STRING LIKE ?||'%' ) \
AND AN.CONFIG_SERVICE_CHAR_ID = CSC.CONFIG_SERVICE_CHAR_ID \
AND CSC.EFFECTIVE_STATUS = 'ACTIVE' \
AND CSC.EFFECTIVE_DATE = ( SELECT MAX(EFFECTIVE_DATE) FROM CONFIG_SERVICE_CHARACTERISTIC CSC1 \
WHERE CSC.CONFIG_SERVICE_CHAR_ID = CSC1.CONFIG_SERVICE_CHAR_ID \
AND CSC1.EFFECTIVE_DATE <= SYSDATE )

databaseclient.onl.PruefeBestandskunde.RetrieveAddressNameCustomer=\
SELECT  DISTINCT CUSTOMER_NUMBER  \
FROM ADDRESS A, ENTITY E   \
WHERE A.EFFECTIVE_STATUS = 'ACTIVE'  \
AND A.ENTITY_ID = E.ENTITY_ID  \
AND E.CUSTOMER_NUMBER IS NOT NULL \
AND E.TERMINATION_DATE = TO_DATE('01.01.1901 01:00:01', 'DD.MM.YYYY HH24:MI:SS') \
AND A.ADDRESS_TYPE_RD IN ('KUND','STD','LOKA')  \
AND A.POSTAL_CODE = ?  \
AND UPPER(A.STREET_NAME) = ?  \
AND A.STREET_NUMBER = ?  \
AND A.STREET_NUMBER_SUFFIX ?  \
AND E.ORGANIZATION_TYPE_RD = ? \
AND E.NLSUPPER_NAME LIKE UPPER(?) \
AND A.EFFECTIVE_DATE = ( SELECT MAX(EFFECTIVE_DATE) FROM ADDRESS A1 \
WHERE A.ADDRESS_ID = A1.ADDRESS_ID \
AND A1.EFFECTIVE_DATE <= SYSDATE )

databaseclient.onl.PruefeBestandskunde.RetrieveAddressCustomer=\
select  distinct customer_number  \
from address a, entity e   \
where a.effective_status = 'ACTIVE'  \
and a.entity_id = e.entity_id  \
and e.customer_number is not null \
and e.termination_date = to_date('01.01.1901 01:00:01', 'DD.MM.YYYY HH24:MI:ss') \
and a.address_type_rd in ('KUND','STD','LOKA')  \
and a.postal_code = ?  \
and upper(a.street_name) = ?  \
and a.street_number = ?  \
and a.STREET_NUMBER_SUFFIX ?  \
and e.customer_number in (?) \
AND a.EFFECTIVE_DATE = ( SELECT MAX(EFFECTIVE_DATE) FROM address a1 \
WHERE a.ADDRESS_ID = a1.ADDRESS_ID \
AND a1.EFFECTIVE_DATE <= SYSDATE )

databaseclient.onl.PruefeBestandskunde.RetrieveNameCustomer=\
SELECT  DISTINCT CUSTOMER_NUMBER , ENTITY_TYPE  \
FROM ENTITY E   \
WHERE E.NLSUPPER_NAME LIKE UPPER(?) \
AND E.TERMINATION_DATE = TO_DATE('01.01.1901 01:00:01', 'DD.MM.YYYY HH24:MI:SS') \
AND E.ORGANIZATION_TYPE_RD = ? \
AND E.CUSTOMER_NUMBER IN (?)


# Definition of the logging level and the appenders
log4j.rootLogger=DEBUG, Console, File

# Console Appender configuration
log4j.appender.Console=org.apache.log4j.ConsoleAppender
log4j.appender.Console.layout=org.apache.log4j.PatternLayout
log4j.appender.Console.layout.ConversionPattern=%d | %-5p | [%t] | %m%n

# File Appender configuration
log4j.appender.File=net.arcor.bks.common.DatedRollingFileAppender
log4j.appender.File.File=/development/BKS/BKS/log/BKS.log
log4j.appender.File.Append=true
log4j.appender.File.MaxFileSize=1MB
log4j.appender.File.DateFormat=.yyyy.MM.dd.HH.mm.ss
log4j.appender.File.layout=org.apache.log4j.PatternLayout
log4j.appender.File.layout.ConversionPattern=%d | %-5p | [%t] | %m%n



#####################
# DATABASE SETTINGS #
#####################

# The list of database aliases that are being used by the application
# An alias maps to a specific set of database configuration settings
db.aliases=onl,effonl

# The name of the database driver to use
db.onl.Driver=oracle.jdbc.driver.OracleDriver

# The connection string to use to connect to the database
db.onl.ConnectString=jdbc:oracle:thin:@pkgdbt13:1564:y5onl

# The user name to use to connect to the database
db.onl.User=main_user

# The password to use to connect to the database (encrypted in CCB format)
db.onl.Password=elegjlkfjrroolddfeqnqmndinejhoil

# The encryption key that was used to encrypt the password
db.onl.EncryptionKey=pshsodoehseffjlhsohedqfpnpfssmpleggfqpprnlhjhess

# The maximum number of minutes that a connection can remain active (in minutes)
db.onl.MaximumConnectionLifeTime=240

# The minimum number of open connections in the pool
db.onl.MinimumConnectionCount=0

# The maximum number of open connections in the pool
db.onl.MaximumConnectionCount=15

# The number of minutes to wait between connection cleanup runs
db.onl.HouseKeepingSleepTime=1

# The name of the database driver to use
db.effonl.Driver=oracle.jdbc.driver.OracleDriver

# The connection string to use to connect to the database
db.effonl.ConnectString=jdbc:oracle:thin:@pkgdbd03:1564:y5effon

# The user name to use to connect to the database
db.effonl.User=main_user

# The password to use to connect to the database (encrypted in CCB format)
db.effonl.Password=elegjlkfjrroolddfeqnqmndinejhoil

# The encryption key that was used to encrypt the password
db.effonl.EncryptionKey=pshsodoehseffjlhsohedqfpnpfssmpleggfqpprnlhjhess

# The maximum number of minutes that a connection can remain active (in minutes)
db.effonl.MaximumConnectionLifeTime=240

# The minimum number of open connections in the pool
db.effonl.MinimumConnectionCount=0

# The maximum number of open connections in the pool
db.effonl.MaximumConnectionCount=15

# The number of minutes to wait between connection cleanup runs
db.effonl.HouseKeepingSleepTime=1
